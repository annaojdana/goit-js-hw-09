{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAsCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,IAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,UAACH,QAASC,IAGlBG,EAAO,UAACJ,QAASC,MAElBA,KA/CMO,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACN,MACEC,UAAYZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cACV,IAAIC,EAAaC,OAAOL,EAAMM,OAC9B,GAAIN,EAAMM,OAAS,GAAKL,EAAKK,OAAS,GAAKJ,EAAOI,MAAQ,EAAG,CAC3DrB,EAAc,EAAGe,EAAMM,OACtBC,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACpBqB,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,UAE5DwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MACpBqB,EAAAzB,GAAS0B,OAAOG,QAAQ,sBAAoB1B,QAAiBC,UAE7D,IAAK,IAAI0B,EAAI,EAAGA,GAAKX,EAAOI,MAAOO,IACjCT,GAAcC,OAAOJ,EAAKK,OAC1BrB,EAAc4B,EAAGT,GAChBG,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACtBqB,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,UAE9DwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBqB,EAAAzB,GAAS0B,OAAOG,QAAQ,sBAAoB1B,QAAiBC,eAK7DqB,EAAAzB,GAAS0B,OAAOG,QAAQ,8BAE1Bf,EAAMM,cAAcW","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount }\n  } = event.currentTarget;\n  let delayTotal = Number(delay.value);\n  if (delay.value >= 0 && step.value >= 0 && amount.value > 0) {\n    createPromise(1, delay.value)\n    .then(({ position, delay }) => {\n   Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n    .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    for (let i = 2; i <= amount.value; i++) {\n      delayTotal += Number(step.value);\n      createPromise(i, delayTotal)\n      .then(({ position, delay }) => {\n   Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  }\n  }\n  else {\n    Notiflix.Notify.failure(`❌ select values ​​above 0 `);\n  }\n  event.currentTarget.reset();\n}; \n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) =>\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({position,delay});\n      } else {\n        // Reject\n        reject({position,delay});\n      }\n    }, delay))\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","delayTotal","Number","value","then","$parcel$interopDefault","Notify","success","catch","failure","i","reset"],"version":3,"file":"03-promises.d67e5b04.js.map"}