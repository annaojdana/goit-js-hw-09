{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA2CA,SAASC,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAGpCC,EAAAP,GAASQ,OAAOC,QAAQ,uBAAqBN,QAAiBC,OAG9DG,EAAAP,GAASQ,OAAOE,QAAQ,sBAAoBP,QAAeC,OAhDlDO,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACN,MACEC,UAAUZ,MAAEA,EAAKa,KAAEA,EAAIC,OAAEA,IACvBJ,EAAMK,cACV,IAAIC,EAAaC,OAAOjB,EAAMkB,OAC9B,GAAIlB,EAAMkB,OAAS,GAAKL,EAAKK,OAAS,GAAKJ,EAAOI,MAAQ,EAAG,CAC3DC,WAAWrB,EAAc,EAAGkB,GAAYA,GACxC,IAAK,IAAII,EAAI,EAAGA,GAAKN,EAAOI,MAAOE,IACjCJ,GAAcC,OAAOJ,EAAKK,OAC1BC,WAAWrB,EAAcsB,EAAGJ,GAAaA,QAI3Cb,EAAAP,GAASQ,OAAOE,QAAQ,8BAqB1BI,EAAMK,cAAcM","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount }\n  } = event.currentTarget;\n  let delayTotal = Number(delay.value);\n  if (delay.value >= 0 && step.value >= 0 && amount.value > 0) {\n    setTimeout(createPromise(1, delayTotal),delayTotal);\n    for (let i = 2; i <= amount.value; i++) {\n      delayTotal += Number(step.value);\n      setTimeout(createPromise(i, delayTotal), delayTotal);\n  }\n  }\n  else {\n    Notiflix.Notify.failure(`❌ select values ​​above 0 `);\n  }\n\n\n//   createPromise(1, delay)\n//    .then(({ position, delay }) => {\n//    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n// for (let i = 0; i < amount.value; i++) {\n//   createPromise(i, delay.value)\n//   .then(({ position, delay }) => {\n//    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n\n  event.currentTarget.reset();\n}\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    // Reject\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Math","random","$parcel$interopDefault","Notify","success","failure","document","querySelector","addEventListener","event","preventDefault","elements","step","amount","currentTarget","delayTotal","Number","value","setTimeout","i","reset"],"version":3,"file":"03-promises.9e79485c.js.map"}