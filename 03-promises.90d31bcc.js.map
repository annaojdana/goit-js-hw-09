{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAsCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,UAC3BC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAACH,SAAAA,EAASC,MAAAA,IAGlBG,EAAO,CAACJ,SAAAA,EAASC,MAAAA,MAElBA,MA/CMO,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACN,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALZ,MAAOgB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAEvBC,EAAaC,OAAOJ,EAAMK,OAC9B,GAAIL,EAAMK,OAAS,GAAKJ,EAAKI,OAAS,GAAKH,EAAOG,MAAQ,EAAG,CAC3DtB,EAAc,EAAGiB,EAAMK,OACtBC,MAAK,SAAAC,OAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACpBuB,EAAA3B,GAAS4B,OAAOC,QAAS,uBAAuCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,UAEpE2B,OAAM,SAAAL,OAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACpBuB,EAAA3B,GAAS4B,OAAOI,QAAS,sBAAsCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,UAErE,IAAK,IAAI6B,EAAI,EAAGA,GAAKZ,EAAOG,MAAOS,IACjCX,GAAcC,OAAOH,EAAKI,OAC1BtB,EAAc+B,EAAGX,GAChBG,MAAK,SAAAC,OAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACtBuB,EAAA3B,GAAS4B,OAAOC,QAAS,uBAAuCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,UAEtE2B,OAAM,SAAAL,OAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,EAAA3B,GAAS4B,OAAOI,QAAS,sBAAsCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,eAKrEuB,EAAA3B,GAAS4B,OAAOI,QAAS,8BAE3BlB,EAAMG,cAAciB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount }\n  } = event.currentTarget;\n  let delayTotal = Number(delay.value);\n  if (delay.value >= 0 && step.value >= 0 && amount.value > 0) {\n    createPromise(1, delay.value)\n    .then(({ position, delay }) => {\n   Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n    .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    for (let i = 2; i <= amount.value; i++) {\n      delayTotal += Number(step.value);\n      createPromise(i, delayTotal)\n      .then(({ position, delay }) => {\n   Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  }\n  }\n  else {\n    Notiflix.Notify.failure(`❌ select values ​​above 0 `);\n  }\n  event.currentTarget.reset();\n}; \n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) =>\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({position,delay});\n      } else {\n        // Reject\n        reject({position,delay});\n      }\n    }, delay))\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","delayTotal","Number","value","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","i","reset"],"version":3,"file":"03-promises.90d31bcc.js.map"}